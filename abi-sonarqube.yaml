apiVersion: v1
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: 2018-11-13T18:50:12Z
    generation: 2
    labels:
      app: sonarqube_db
      template: postgresql-persistent-template
    name: postgresql
    namespace: abi-sonarqube
    resourceVersion: "973424"
    selfLink: /apis/apps.openshift.io/v1/namespaces/abi-sonarqube/deploymentconfigs/postgresql
    uid: f385c585-e774-11e8-8cf3-16eaa0d97fe8
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: sonarqube_db
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: docker-registry.default.svc:5000/openshift/postgresql@sha256:75b2d147b559487a42bf37e48867a09337e7f02ba91c8ff420be3c5a74faef9d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.6
          namespace: openshift
        lastTriggeredImage: docker-registry.default.svc:5000/openshift/postgresql@sha256:75b2d147b559487a42bf37e48867a09337e7f02ba91c8ff420be3c5a74faef9d
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-11-13T18:50:15Z
      lastUpdateTime: 2018-11-13T18:50:35Z
      message: replication controller "postgresql-1" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: 2018-11-16T12:50:56Z
      lastUpdateTime: 2018-11-16T12:50:56Z
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: 2018-11-13T18:50:28Z
    generation: 11
    labels:
      app: sonarqube
    name: sonarqube
    namespace: abi-sonarqube
    resourceVersion: "975116"
    selfLink: /apis/apps.openshift.io/v1/namespaces/abi-sonarqube/deploymentconfigs/sonarqube
    uid: fd4d82e1-e774-11e8-8cf3-16eaa0d97fe8
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: sonarqube
      deploymentconfig: sonarqube
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: sonarqube
          deploymentconfig: sonarqube
      spec:
        containers:
        - env:
          - name: SONARQUBE_JDBC_PASSWORD
            value: sonar
          - name: SONARQUBE_JDBC_URL
            value: jdbc:postgresql://postgresql/sonar
          - name: SONARQUBE_JDBC_USERNAME
            value: sonar
          image: wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 40
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: sonarqube
          ports:
          - containerPort: 9000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /about
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/sonarqube/data
            name: sonarqube-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: sonarqube-volume-1
          persistentVolumeClaim:
            claimName: sonarqube-pvc
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - sonarqube
        from:
          kind: ImageStreamTag
          name: sonarqube:6.7.5
          namespace: abi-sonarqube
        lastTriggeredImage: wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a
      type: ImageChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-11-13T18:53:34Z
      lastUpdateTime: 2018-11-13T18:53:58Z
      message: replication controller "sonarqube-2" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: 2018-11-16T12:52:08Z
      lastUpdateTime: 2018-11-16T12:52:08Z
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 2
    observedGeneration: 11
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/image.dockerRepositoryCheck: 2018-11-13T18:50:28Z
    creationTimestamp: 2018-11-13T18:50:28Z
    generation: 2
    labels:
      app: sonarqube
    name: sonarqube
    namespace: abi-sonarqube
    resourceVersion: "336452"
    selfLink: /apis/image.openshift.io/v1/namespaces/abi-sonarqube/imagestreams/sonarqube
    uid: fd4be0d7-e774-11e8-8cf3-16eaa0d97fe8
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: wkulhanek/sonarqube:6.7.5
      from:
        kind: DockerImage
        name: wkulhanek/sonarqube:6.7.5
      generation: 2
      importPolicy: {}
      name: 6.7.5
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: docker-registry.default.svc:5000/abi-sonarqube/sonarqube
    tags:
    - items:
      - created: 2018-11-13T18:50:28Z
        dockerImageReference: wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a
        generation: 2
        image: sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a
      tag: 6.7.5
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: 2018-11-13T18:50:49Z
    labels:
      app: sonarqube
    name: sonarqube
    namespace: abi-sonarqube
    resourceVersion: "336616"
    selfLink: /apis/route.openshift.io/v1/namespaces/abi-sonarqube/routes/sonarqube
    uid: 0a022343-e775-11e8-8cf3-16eaa0d97fe8
  spec:
    host: sonarqube-abi-sonarqube.apps.bd2b.openshift.opentlc.com
    port:
      targetPort: 9000-tcp
    to:
      kind: Service
      name: sonarqube
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-11-13T18:50:49Z
        status: "True"
        type: Admitted
      host: sonarqube-abi-sonarqube.apps.bd2b.openshift.opentlc.com
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        postgresql; cpu limit for container postgresql'
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.name: postgresql-1
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/scc: restricted
    creationTimestamp: 2018-11-13T18:50:15Z
    generateName: postgresql-1-
    labels:
      app: sonarqube_db
      deployment: postgresql-1
      deploymentconfig: postgresql
      name: postgresql
    name: postgresql-1-5757r
    namespace: abi-sonarqube
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-1
      uid: f388abab-e774-11e8-8cf3-16eaa0d97fe8
    resourceVersion: "973421"
    selfLink: /api/v1/namespaces/abi-sonarqube/pods/postgresql-1-5757r
    uid: f595b844-e774-11e8-8cf3-16eaa0d97fe8
  spec:
    containers:
    - env:
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: database-user
            name: postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: database-password
            name: postgresql
      - name: POSTGRESQL_DATABASE
        valueFrom:
          secretKeyRef:
            key: database-name
            name: postgresql
      image: docker-registry.default.svc:5000/openshift/postgresql@sha256:75b2d147b559487a42bf37e48867a09337e7f02ba91c8ff420be3c5a74faef9d
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /usr/libexec/check-container
          - --live
        failureThreshold: 3
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: postgresql
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /usr/libexec/check-container
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1001500000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hrbht
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-r9mdh
    nodeName: node4.bd2b.internal
    nodeSelector:
      node-role.kubernetes.io/compute: "true"
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001500000
      seLinuxOptions:
        level: s0:c39,c9
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: postgresql-data
      persistentVolumeClaim:
        claimName: postgresql
    - name: default-token-hrbht
      secret:
        defaultMode: 420
        secretName: default-token-hrbht
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-11-13T18:50:15Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-11-16T12:50:52Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2018-11-13T18:50:15Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://30a169873172d2115d05f7eca29d4d1365c6f5f6d06083724e0238fb0cfcf319
      image: sha256:a3c175f98d283674710a4011a51b3caf593ea36cc5787f12c99c97540a02e1ba
      imageID: docker-pullable://docker-registry.default.svc:5000/openshift/postgresql@sha256:75b2d147b559487a42bf37e48867a09337e7f02ba91c8ff420be3c5a74faef9d
      lastState:
        terminated:
          containerID: docker://afb92785a3ed7f63c9ae29ec7cf247676c88eddcd35a22311c6df0c232b13c58
          exitCode: 2
          finishedAt: 2018-11-16T12:50:19Z
          reason: Error
          startedAt: 2018-11-16T12:49:15Z
      name: postgresql
      ready: true
      restartCount: 6
      state:
        running:
          startedAt: 2018-11-16T12:50:31Z
    hostIP: 192.199.0.202
    phase: Running
    podIP: 10.1.5.244
    qosClass: Burstable
    startTime: 2018-11-13T18:50:15Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: sonarqube
      openshift.io/deployment.name: sonarqube-2
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/scc: restricted
    creationTimestamp: 2018-11-15T15:53:13Z
    generateName: sonarqube-2-
    labels:
      app: sonarqube
      deployment: sonarqube-2
      deploymentconfig: sonarqube
    name: sonarqube-2-9pz2h
    namespace: abi-sonarqube
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: sonarqube-2
      uid: 680b37e8-e775-11e8-8cf3-16eaa0d97fe8
    resourceVersion: "975113"
    selfLink: /api/v1/namespaces/abi-sonarqube/pods/sonarqube-2-9pz2h
    uid: 8f3ba574-e8ee-11e8-976c-16eaa0d97fe8
  spec:
    containers:
    - env:
      - name: SONARQUBE_JDBC_PASSWORD
        value: sonar
      - name: SONARQUBE_JDBC_URL
        value: jdbc:postgresql://postgresql/sonar
      - name: SONARQUBE_JDBC_USERNAME
        value: sonar
      image: wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - echo
          - ok
        failureThreshold: 3
        initialDelaySeconds: 40
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: sonarqube
      ports:
      - containerPort: 9000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /about
          port: 9000
          scheme: HTTP
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "2"
          memory: 3Gi
        requests:
          cpu: "1"
          memory: 2Gi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001500000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/sonarqube/data
        name: sonarqube-volume-1
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hrbht
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-r9mdh
    nodeName: node1.bd2b.internal
    nodeSelector:
      node-role.kubernetes.io/compute: "true"
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001500000
      seLinuxOptions:
        level: s0:c39,c9
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: sonarqube-volume-1
      persistentVolumeClaim:
        claimName: sonarqube-pvc
    - name: default-token-hrbht
      secret:
        defaultMode: 420
        secretName: default-token-hrbht
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-11-15T15:53:14Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-11-16T12:52:08Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2018-11-15T15:53:13Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://15954967ce45596363b06b299215e723e6c581c477714968977ab88608acab1c
      image: sha256:47945e6d4fc76386891f20d910cde8673beb1e1015ec1b0aee031f53773d7eb0
      imageID: docker-pullable://docker.io/wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a
      lastState:
        terminated:
          containerID: docker://2297ac1a4af04c1ef9228d0e0686f21cddcd7890a6991b014d2fc968dc42bc7f
          exitCode: 0
          finishedAt: 2018-11-16T12:50:53Z
          reason: Completed
          startedAt: 2018-11-16T12:49:29Z
      name: sonarqube
      ready: true
      restartCount: 3
      state:
        running:
          startedAt: 2018-11-16T12:51:23Z
    hostIP: 192.199.0.99
    phase: Running
    podIP: 10.1.10.157
    qosClass: Burstable
    startTime: 2018-11-15T15:53:14Z
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-11-13 18:50:35 +0000 UTC
      openshift.io/deployer-pod.created-at: 2018-11-13 18:50:12 +0000 UTC
      openshift.io/deployer-pod.name: postgresql-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"postgresql","namespace":"abi-sonarqube","selfLink":"/apis/apps.openshift.io/v1/namespaces/abi-sonarqube/deploymentconfigs/postgresql","uid":"f385c585-e774-11e8-8cf3-16eaa0d97fe8","resourceVersion":"336370","generation":2,"creationTimestamp":"2018-11-13T18:50:12Z","labels":{"app":"sonarqube_db","template":"postgresql-persistent-template"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp","template.alpha.openshift.io/wait-for-ready":"true"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.6"},"lastTriggeredImage":"docker-registry.default.svc:5000/openshift/postgresql@sha256:75b2d147b559487a42bf37e48867a09337e7f02ba91c8ff420be3c5a74faef9d"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"sonarqube_db","name":"postgresql"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql"}}],"containers":[{"name":"postgresql","image":"docker-registry.default.svc:5000/openshift/postgresql@sha256:75b2d147b559487a42bf37e48867a09337e7f02ba91c8ff420be3c5a74faef9d","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"database-user"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"database-password"}}},{"name":"POSTGRESQL_DATABASE","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"database-name"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"exec":{"command":["/usr/libexec/check-container","--live"]},"initialDelaySeconds":120,"timeoutSeconds":10,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/usr/libexec/check-container"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":0,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]}}}
    creationTimestamp: 2018-11-13T18:50:12Z
    generation: 2
    labels:
      app: sonarqube_db
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-1
    namespace: abi-sonarqube
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: f385c585-e774-11e8-8cf3-16eaa0d97fe8
    resourceVersion: "973423"
    selfLink: /api/v1/namespaces/abi-sonarqube/replicationcontrollers/postgresql-1
    uid: f388abab-e774-11e8-8cf3-16eaa0d97fe8
  spec:
    replicas: 1
    selector:
      deployment: postgresql-1
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-1
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: sonarqube_db
          deployment: postgresql-1
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: docker-registry.default.svc:5000/openshift/postgresql@sha256:75b2d147b559487a42bf37e48867a09337e7f02ba91c8ff420be3c5a74faef9d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-11-13 18:50:35 +0000 UTC
      openshift.io/deployer-pod.created-at: 2018-11-13 18:50:28 +0000 UTC
      openshift.io/deployer-pod.name: sonarqube-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: sonarqube
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"sonarqube","namespace":"abi-sonarqube","selfLink":"/apis/apps.openshift.io/v1/namespaces/abi-sonarqube/deploymentconfigs/sonarqube","uid":"fd4d82e1-e774-11e8-8cf3-16eaa0d97fe8","resourceVersion":"336454","generation":2,"creationTimestamp":"2018-11-13T18:50:28Z","labels":{"app":"sonarqube"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["sonarqube"],"from":{"kind":"ImageStreamTag","namespace":"abi-sonarqube","name":"sonarqube:6.7.5"},"lastTriggeredImage":"wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a"}}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"app":"sonarqube","deploymentconfig":"sonarqube"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"sonarqube","deploymentconfig":"sonarqube"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"sonarqube-volume-1","emptyDir":{}}],"containers":[{"name":"sonarqube","image":"wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a","ports":[{"containerPort":9000,"protocol":"TCP"}],"env":[{"name":"SONARQUBE_JDBC_PASSWORD","value":"sonar"},{"name":"SONARQUBE_JDBC_URL","value":"jdbc:postgresql://postgresql/sonar"},{"name":"SONARQUBE_JDBC_USERNAME","value":"sonar"}],"resources":{},"volumeMounts":[{"name":"sonarqube-volume-1","mountPath":"/opt/sonarqube/data"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-11-13T18:50:28Z","lastTransitionTime":"2018-11-13T18:50:28Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: 2018-11-13T18:50:28Z
    generation: 3
    labels:
      app: sonarqube
      openshift.io/deployment-config.name: sonarqube
    name: sonarqube-1
    namespace: abi-sonarqube
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: sonarqube
      uid: fd4d82e1-e774-11e8-8cf3-16eaa0d97fe8
    resourceVersion: "337474"
    selfLink: /api/v1/namespaces/abi-sonarqube/replicationcontrollers/sonarqube-1
    uid: fd60425f-e774-11e8-8cf3-16eaa0d97fe8
  spec:
    replicas: 0
    selector:
      app: sonarqube
      deployment: sonarqube-1
      deploymentconfig: sonarqube
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: sonarqube
          openshift.io/deployment.name: sonarqube-1
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: sonarqube
          deployment: sonarqube-1
          deploymentconfig: sonarqube
      spec:
        containers:
        - env:
          - name: SONARQUBE_JDBC_PASSWORD
            value: sonar
          - name: SONARQUBE_JDBC_URL
            value: jdbc:postgresql://postgresql/sonar
          - name: SONARQUBE_JDBC_USERNAME
            value: sonar
          image: wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a
          imagePullPolicy: IfNotPresent
          name: sonarqube
          ports:
          - containerPort: 9000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/sonarqube/data
            name: sonarqube-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: sonarqube-volume-1
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-11-13 18:53:58 +0000 UTC
      openshift.io/deployer-pod.created-at: 2018-11-13 18:53:27 +0000 UTC
      openshift.io/deployer-pod.name: sonarqube-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: sonarqube
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"sonarqube","namespace":"abi-sonarqube","selfLink":"/apis/apps.openshift.io/v1/namespaces/abi-sonarqube/deploymentconfigs/sonarqube","uid":"fd4d82e1-e774-11e8-8cf3-16eaa0d97fe8","resourceVersion":"337444","generation":9,"creationTimestamp":"2018-11-13T18:50:28Z","labels":{"app":"sonarqube"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["sonarqube"],"from":{"kind":"ImageStreamTag","namespace":"abi-sonarqube","name":"sonarqube:6.7.5"},"lastTriggeredImage":"wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a"}}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"app":"sonarqube","deploymentconfig":"sonarqube"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"sonarqube","deploymentconfig":"sonarqube"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"sonarqube-volume-1","persistentVolumeClaim":{"claimName":"sonarqube-pvc"}}],"containers":[{"name":"sonarqube","image":"wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a","ports":[{"containerPort":9000,"protocol":"TCP"}],"env":[{"name":"SONARQUBE_JDBC_PASSWORD","value":"sonar"},{"name":"SONARQUBE_JDBC_URL","value":"jdbc:postgresql://postgresql/sonar"},{"name":"SONARQUBE_JDBC_USERNAME","value":"sonar"}],"resources":{"limits":{"cpu":"2","memory":"3Gi"},"requests":{"cpu":"1","memory":"2Gi"}},"volumeMounts":[{"name":"sonarqube-volume-1","mountPath":"/opt/sonarqube/data"}],"livenessProbe":{"exec":{"command":["echo","ok"]},"initialDelaySeconds":40,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/about","port":9000,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":8,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-11-13T18:50:35Z","lastTransitionTime":"2018-11-13T18:50:32Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"sonarqube-1\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-11-13T18:53:09Z","lastTransitionTime":"2018-11-13T18:53:09Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: 2018-11-13T18:53:27Z
    generation: 4
    labels:
      app: sonarqube
      openshift.io/deployment-config.name: sonarqube
    name: sonarqube-2
    namespace: abi-sonarqube
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: sonarqube
      uid: fd4d82e1-e774-11e8-8cf3-16eaa0d97fe8
    resourceVersion: "975115"
    selfLink: /api/v1/namespaces/abi-sonarqube/replicationcontrollers/sonarqube-2
    uid: 680b37e8-e775-11e8-8cf3-16eaa0d97fe8
  spec:
    replicas: 1
    selector:
      app: sonarqube
      deployment: sonarqube-2
      deploymentconfig: sonarqube
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: sonarqube
          openshift.io/deployment.name: sonarqube-2
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: sonarqube
          deployment: sonarqube-2
          deploymentconfig: sonarqube
      spec:
        containers:
        - env:
          - name: SONARQUBE_JDBC_PASSWORD
            value: sonar
          - name: SONARQUBE_JDBC_URL
            value: jdbc:postgresql://postgresql/sonar
          - name: SONARQUBE_JDBC_USERNAME
            value: sonar
          image: wkulhanek/sonarqube@sha256:9101c8c717c4296013182ba8c6ed07b663f901fe18186b3ac45eda9d4f991c4a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 40
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: sonarqube
          ports:
          - containerPort: 9000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /about
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/sonarqube/data
            name: sonarqube-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: sonarqube-volume-1
          persistentVolumeClaim:
            claimName: sonarqube-pvc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    creationTimestamp: 2018-11-13T18:50:12Z
    labels:
      app: sonarqube_db
      template: postgresql-persistent-template
    name: postgresql
    namespace: abi-sonarqube
    resourceVersion: "336361"
    selfLink: /api/v1/namespaces/abi-sonarqube/services/postgresql
    uid: f382bade-e774-11e8-8cf3-16eaa0d97fe8
  spec:
    clusterIP: 172.30.147.202
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: 2018-11-13T18:50:28Z
    labels:
      app: sonarqube
    name: sonarqube
    namespace: abi-sonarqube
    resourceVersion: "336450"
    selfLink: /api/v1/namespaces/abi-sonarqube/services/sonarqube
    uid: fd4f10c0-e774-11e8-8cf3-16eaa0d97fe8
  spec:
    clusterIP: 172.30.151.47
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: sonarqube
      deploymentconfig: sonarqube
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
